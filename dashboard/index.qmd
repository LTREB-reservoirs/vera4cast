---
title: "Forecasting Challenge"
---

Welcome to the Virginia Ecoforecast Reservoir Analysis ([VERA](http://ltreb-reservoirs.org/)) Forecasting Challenge, hosted by the Ecological Forecasting Project at Virginia Tech ([EFP](https://www.ecoforecastprojectvt.org/)) as part of the Virginia Reservoirs LTREB program.

We invite you to submit forecasts!

## Why a forecasting challenge? 

We are using forecasts to compare the predictability of different physical, chemical, and biological variables across varying environmental conditions to identify the fundamental predictability of freshwater ecosystems.

The VERA forecasting challenge is one component of the Virginia Reservoirs LTREB project, which is monitoring two connected drinking water supply reservoirs with contrasting dissolved oxygen conditions to broadly advance our understanding of freshwater ecosystem processes.

<br />
<br />
```{r setup, include=FALSE, echo=FALSE, message=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
library(dplyr)
library(arrow)
library(bslib)
library(bsicons)
library(leaflet)
library(tidyverse)
config <- yaml::read_yaml("../challenge_configuration.yaml")
sites <- suppressMessages(sf::st_read("sites.json"))
s3_inventory <- arrow::s3_bucket(paste0(config$inventory_bucket, "/catalog/forecasts/project_id=", config$project_id), endpoint_override = config$endpoint, anonymous = TRUE)
n_forecasts <- arrow::open_dataset(s3_inventory) |> distinct(model_id, reference_date) |> collect() |> nrow()
n_models <- arrow::open_dataset(s3_inventory) |> distinct(model_id) |> collect() |> nrow()

s3_targets <- arrow::s3_bucket(config$targets_bucket, endpoint_override = config$endpoint, anonymous = TRUE)

most_recent_targets <- arrow::open_csv_dataset(s3_targets,
                                    schema = arrow::schema(
                                      project_id = arrow::string(),
                                      site_id = arrow::string(),
                                      datetime = arrow::timestamp(unit = "ns", timezone = "UTC"),
                                      duration = arrow::string(),
                                      depth_m = arrow::float(),
                                      variable = arrow::string(),
                                      observation = arrow::float()),
                                    skip = 1) |>
  filter(project_id == config$project_id) |> 
    summarize(max = max(datetime),
              min = min(datetime)) |> 
    mutate(max = lubridate::as_date(max),
           min = lubridate::as_date(min)) |> 
    dplyr::collect()

unique_forecasted_targets <- arrow::open_dataset("../cache/summaries/duration=P1D") |> 
  dplyr::distinct(variable) |> count() |> 
    dplyr::collect() |> 
    pull(n)

last_updated <- Sys.Date()
```

```{r}

layout_column_wrap(
  width = "250px",
  value_box(
    title = "Total forecasts submitted to the VERA Challenge", 
    value = n_forecasts,
    showcase = bs_icon("graph-up"),
    theme_color = "success" 
  ),
  value_box(
    title = "Most recent data for model training", 
    value = most_recent_targets$max,
    showcase = bs_icon("bullseye")
  ),
    value_box(
    title = "Number of years of data for model training", 
    value = round(as.numeric(most_recent_targets$max - most_recent_targets$min) /365, 2),
    showcase = bs_icon("bullseye")
  ),
    value_box(
    title = "Number of variables being forecasted", 
    value = unique_forecasted_targets,
    showcase = bs_icon("clipboard-data"),
    theme_color = "success" 
  )
)

```
<br />
<br />

## What sites are being forecasted?

```{r fig.height=5, fig.width=5, echo=FALSE, include=TRUE, message = FALSE}
leaflet() %>%
  setView(lat = 37.310922, lng = -79.828854, zoom= 15) %>%
  addTiles(group="OSM") %>%
  addProviderTiles(providers$Esri.WorldImagery, group="Imagery") %>%
  addProviderTiles(providers$Esri.WorldTopoMap, group="Topo Map") %>%
  addLayersControl(baseGroups=c('Imagery','OSM', 'Topo Map')) |> 
  addMarkers(data  = sites, popup=~as.character(site_id), group = ~as.character(Partner), clusterOptions = markerClusterOptions())
```
<br />
<br />
This material is based upon work supported by the National Science Foundation under Grant DEB-2327030. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.
<br />
<br />
Page last updated on `r Sys.Date()`
